type Query {
    user(email: String!): User
    me: User
}

type Mutation {
    createUser(name: String!, email: String!, password: String!, confirmPassword: String!): User!
    login(email: String!, password: String!): User
    logout: Boolean!
    requestReset(email: String!): Boolean!
    resetPassword(password: String!, confirmPassword: String!, resetToken: String!): User!
}

type User {
    id: ID!
    email: String!
    name: String!
    password: String!
    resetToken: String
    resetTokenExpiry: Float
}

type Person {
    id: ID!
    name: String!
}

type Discount {
    id: ID!
    name: String
    amount: Float!
    type: String
}

type Item {
    id: ID!
    name: String
    buyers: [Person!]!
    cost: Float
    taxRate: TaxRate
    discounts: [Discount!]!
}

type TaxRate {
    id: ID!
    name: String
    amount: Float!
}

type Receipt {
    id: ID!
    user: User!
    date: Int
    store: String
    participants: [Person!]!
    discounts: [Discount!]!
    taxRates: [TaxRate!]!
    items: [Item!]!
}
